---
# using: 
### https://docs.ansible.com/ansible/latest/plugins/lookup/file.html  
### https://docs.ansible.com/ansible/latest/modules/lineinfile_module.html  

## pass file_name var to this play  
## ansible-playbook main.yml -e "file_name=XXXXXXXXXXXXX"  



- hosts: localhost

  tasks:
  # - debug: msg="the value of foo.txt is {{lookup('file', '/etc/foo.txt') }}"

  ## What is current working directory (cwd)?
  ### https://github.com/farrellit/ansible-demonstrations/tree/master/shell-cwd  
  ### https://stackoverflow.com/questions/54390224/ansible-how-to-run-a-script-on-a-relative-path  
  # - command: pwd
  #   register: shellout
  # - debug: var=shellout.stdout
  # - shell: pwd
  #   args:
  #     chdir: "{{role_path}}"
  #   register: shellout2
  # - debug: var=shellout2.stdout

  ## Get the name of the file and strip off the extension, using regex  
  - name: "set fact for {{ file_name }}"
    set_fact: 
      ## raw regex to capture the filename is: ([a-zA-Z0-9\\\/_]+[^.]+).+
      md_file_name: "{{ output | regex   ([a-zA-Z0-9\\\/_]+[^.]+).+   }}"

### Think I need to start a block here -----------------------  

## raw regex that works is:  ^[#\\\/\/*\\*;]+\s(.*$)|^\s+[#\\;\/\/\/*\\*]+\s(.+)$
## this will capture commented lines that start with the following characters: "#, ,\,//,\*,/*,;"  
## NOTE: it does assume a space after the comment character(s).  
## Group 1 is outdented comments  
## Group 2 is indented comments  



  - name: "pull comments from file"
    debug: var=item
    with_file:
      - "{{file_name}}"
      # - "bar.txt"  # will be looked in files/ dir relative to play or in role
      # - "/path/to/biz.txt" 
    register: output



  ## Write out to the new file, of the same name_of_file + .md; create it if it doesn't exist  
  - name: "write the output to a new file"
    lineinfile:
      path: "{{ md_file_name }}.md"


      create: yes

